1. Basic information
Team number : 02 

Student ID : W1659190
Student Name : Calvin Thomas Dani
OS (bit) : macOS (64 bit)
gcc version : Apple clang version 14.0.0

Student ID : W1648452
Student Name : Eshaan Rathi
OS (bit) : 64 bit macOS
gcc version : Apple clang version 14.0.0 (clang-1400.0.29.102)

Student ID : W1650108
Student Name : Rohit Yadav
OS (bit) : macOS (64 bit)
gcc version : Apple clang version 14.0.0


2. Catalog information about Index


- Filter : Filter() recieves value in terms of Iterator and Condition. This is used to get the information about the table and also the query. The data is passed through RM->getAttributes to get the attributes. Then all the data is passed to RM->Scan method which retrives the data which fulfils the conditions.

- Project : Project() recieves values in terms of Iterator and vector<strings>. This is used to get the information about the table and also the query. The data is passed through RM->getAttributes to get the attributes. Then all the data is passed to RM->Scan method which retrives the data which fulfils the conditions.

3. Block Nested Loop Join (If you have implemented this feature)
- We have used the condition attribute recieved by the BNLJoin() constructor to get the details about table, like tableName, attributes etc.
- We used this information to create a hashmap over Table left.
- Once its done, we will pass the data of Table right through hashmap to get our join data.
- Then this data will be passed through Filter() to get the condition matched.


4. Index Nested Loop Join (If you have implemented this feature)
- N/A


5. Grace Hash Join (If you have implemented this feature)
- N/A


6. Aggregation
- N/A


7. Implementation Detail
- Have you added your own source file (.cc or .h)? No

- Have you implemented any optional features? Then, describe them here.

- Other implementation details:


6. Other (optional)
- Freely use this section to tell us about things that are related to the project 4, but not related to the other sections (optional)

